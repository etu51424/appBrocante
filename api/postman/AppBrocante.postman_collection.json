{
	"info": {
		"_postman_id": "d536456f-ce33-4108-a38e-45b3f9038338",
		"name": "AppBrocante",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38581489"
	},
	"item": [
		{
			"name": "Articles",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function (){\r",
									"    if (pm.response.to.have.status(201)){\r",
									"        pm.environment.set(\"jwt_token\", pm.response.text())\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"Lord\",\r\n    \"password\" : \"brocante\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/client/person/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"client",
								"person",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non existant article",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/article/{{article_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"article",
								"{{article_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new article with wrong parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"personId\" : \"5\",\r\n\t\"title\" : 4,\r\n\t\"description\" : \"Une playstation achetée en 2016\",\r\n\t\"cost\" : 400,\r\n\t\"condition\" : \"Bon état\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/article/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"article",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new article",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"The id of the new article should be return\", () => {\r",
									"    const response = pm.response.json();\r",
									"    console.log(response);\r",
									"    pm.environment.set(\"article_id\", response.id);\r",
									"    pm.expect(response.id).to.equal(pm.environment.get(\"article_id\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"personId\" : 5,\r\n\t\"title\" : \"Playstation 4\",\r\n\t\"description\" : \"Une playstation achetée en 2016\",\r\n\t\"cost\" : 400,\r\n\t\"condition\" : \"Bon état\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/article",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"article"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the created article",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Article should be correctly returned\", () => {\r",
									"    const article = {\r",
									"        id: pm.environment.get(\"article_id\"),\r",
									"        dealer_id : 5,\r",
									"        title: \"Playstation 4\",\r",
									"        description: \"Une playstation achetée en 2016\", \r",
									"        entry_date : null,\r",
									"        cost: \"400.00\",\r",
									"        condition: \"Bon état\"\r",
									"    };\r",
									"    const response = pm.response.json();\r",
									"    console.log(response);\r",
									"    pm.expect(response).to.be.eql(article);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/article/{{article_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"article",
								"{{article_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the created article",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function(){\r",
									"    pm.response.to.have.status(204);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{article_id}},\r\n    \"cost\": \"450.00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/admin/article/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"article",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the created article",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function(){\r",
									"    pm.response.to.have.status(204);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/admin/article/{{article_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"admin",
								"article",
								"{{article_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}